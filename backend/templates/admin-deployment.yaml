{{- if .Values.admin.enabled }}
kind: Deployment
apiVersion: apps/v1
metadata:
  name: {{ template "admin.fullname" . }}
  labels:
    {{- include "backend.labels" . | nindent 4 }}
    component: "admin"
spec:
  replicas: {{ default 1 .Values.admin.replicas }}
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "backend.selectorLabels" . | nindent 6 }}
      component: "admin"
  template:
    metadata:
      labels:
        {{- include "backend.selectorLabels" . | nindent 8 }}
        component: "admin"
      annotations:
        checksum/common-secret: {{ include (print $.Template.BasePath "/common-secret.yaml") . | sha256sum }}
        checksum/common-configmap: {{ include (print $.Template.BasePath "/common-configmap.yaml") . | sha256sum }}
        checksum/admin-secret: {{ include (print $.Template.BasePath "/admin-secret.yaml") . | sha256sum }}
    spec:
    {{- if .Values.admin.tolerations }}
      tolerations:
        {{ tpl .Values.admin.tolerations . | nindent 8 | trim }}
    {{- end }}
    {{- if .Values.admin.affinity }}
      affinity:
        {{ tpl .Values.admin.affinity . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
      serviceAccountName: {{ template "admin.fullname" . }}
      priorityClassName: {{ .Values.admin.priorityClassName | quote }}
      initContainers:
        - name: initdb
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python", "manage.py", "migrate", "--no-input"]
          envFrom:
            - secretRef:
                name: {{ template "backend.fullname" . }}
            - configMapRef:
                name: {{ template "backend.fullname" . }}
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "server.admin.conf"
            - name: ADMIN_BASE_URL
              value: {{ .Values.admin.conf.adminBaseUrl | quote }}
            - name: ALLOWED_HOSTS
              value: {{ .Values.admin.conf.allowedHosts | quote }}
      {{- if .Values.admin.user.create }}
        - name: init-admin
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["/bin/sh", "-c", "python manage.py create_superuser"]
          envFrom:
            - configMapRef:
                name: {{ template "backend.fullname" . }}
            - secretRef:
                name: {{ template "backend.fullname" . }}
            - secretRef:
                name: {{ template "admin.fullname" . }}
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "server.admin.conf"
            - name: ADMIN_BASE_URL
              value: {{ .Values.admin.conf.adminBaseUrl | quote }}
            - name: ALLOWED_HOSTS
              value: {{ .Values.admin.conf.allowedHosts | quote }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - configMapRef:
                name: {{ template "backend.fullname" . }}
            - secretRef:
                name: {{ template "backend.fullname" . }}
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "server.admin.conf"
            - name: ADMIN_BASE_URL
              value: {{ .Values.admin.conf.adminBaseUrl | quote }}
            - name: ALLOWED_HOSTS
              value: {{ .Values.admin.conf.allowedHosts | quote }}
        {{- with .Values.admin.resources }}
          resources:
            {{ toYaml . | nindent 12 | trim }}
        {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.admin.servicePort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: {{ printf "/%slogin/" .Values.admin.conf.adminBaseUrl }}
              port: http
            {{- if .Values.admin.probesHostHeader }}
              httpHeaders:
                - name: Host
                  value: {{ .Values.admin.probesHostHeader | quote }}
            {{- end }}
            initialDelaySeconds: 15
            timeoutSeconds: 30
            failureThreshold: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: {{ printf "/%slogin/" .Values.admin.conf.adminBaseUrl }}
              port: http
            {{- if .Values.admin.probesHostHeader }}
              httpHeaders:
                - name: Host
                  value: {{ .Values.admin.probesHostHeader | quote }}
            {{- end }}
            initialDelaySeconds: 15
            timeoutSeconds: 30
            failureThreshold: 5
            periodSeconds: 60
{{- end }}
