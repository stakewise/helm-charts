kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ template "lighthouse.fullname" . }}
  labels:
    {{- include "lighthouse.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "lighthouse.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "lighthouse.fullname" . }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        {{- include "lighthouse.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
      serviceAccountName: {{ template "lighthouse.fullname" . }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- if and .Values.persistence.enabled .Values.initChownData }}
      initContainers:
        - name: init-chown
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsUser }}", "/data"]
          volumeMounts:
            - name: data
              mountPath: /data
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - lighthouse
            - bn
            - --staking
            - --http-address=0.0.0.0
            - --eth1-endpoints={{ .Values.eth1Endpoints | join "," }}
            - --datadir=/data
            - --network={{ .Values.network }}
          {{- range .Values.extraFlags }}
            - {{ . | quote }}
          {{- end }}
          {{- if .Values.metrics.enabled }}
          {{- range .Values.metrics.flags }}
            - {{ . | quote }}
          {{- end }}
          {{- end }}
          ports:
            - containerPort: 9000
              name: peer-tcp
              protocol: TCP
            - containerPort: 9000
              name: peer-udp
              protocol: UDP
            - containerPort: {{ .Values.rpc.port }}
              protocol: TCP
              name: http
          {{- if .Values.metrics.enabled }}
            - containerPort: {{ .Values.metrics.port }}
              name: metrics
              protocol: TCP
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
        {{- with .Values.resources }}
          resources:
            {{ toYaml . | nindent 12 | trim }}
        {{- end }}
        {{- with .Values.readinessProbe }}
          readinessProbe:
            {{ toYaml . | nindent 12 | trim }}
        {{- end }}
        {{- with .Values.livenessProbe }}
          livenessProbe:
            {{ toYaml . | nindent 12 | trim }}
        {{- end }}
{{- if not .Values.persistence.enabled }}
      volumes:
      {{- if (not .Values.persistence.enabled) }}
        - name: data
          emptyDir: {}
      {{- end }}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "lighthouse.labels" . | nindent 10 }}
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
{{- end }}
