# Default values for erigon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

## Init image is used to chown data volume, initialise genesis, etc.
##
initImage:
  repository: "busybox"
  tag: "1.34"
  pullPolicy: IfNotPresent

## Sidecar image is used to perform Liveness/Readiness probes.
##
sidecar:
  repository: "europe-west4-docker.pkg.dev/stakewiselabs/public/ethnode-sidecar"
  tag: "v1.0.3"
  pullPolicy: IfNotPresent
  bindAddr: "0.0.0.0"
  bindPort: 3000

image:
  repository: thorax/erigon
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v2022.06.06"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext:
  fsGroup: 1001
  runAsUser: 1001

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

## RBAC configuration.
## ref: https://kubernetes.io/docs/reference/access-authn-authz/rbac/
##
rbac:
  ## @param rbac.create Specifies whether RBAC resources are to be created
  ##
  create: true
  ## @param rbac.clusterRules Required ClusterRole rules
  ## @default -- See `values.yaml`
  clusterRules:
    ## Required to obtain the nodes external IP
    - apiGroups: [""]
      resources:
      - "nodes"
      verbs:
      - "get"
      - "list"
      - "watch"
  ## @param rbac.rules Required ClusterRole rules
  ## @default -- See `values.yaml`
  rules:
    ## Required to get information about the serices nodePort.
    - apiGroups: [""]
      resources:
      - "services"
      verbs:
      - "get"
      - "list"
      - "watch"

## Erigon configuration
##

## Network (chain) ID
## Supported options: mainnet, goerli
##
network: mainnet

# private api network address, for example: 127.0.0.1:9090,
# empty string means not to start the listener.
# Do not expose to public network.
# Serves remote database interface (default: "127.0.0.1:9090")
privateApiAddr: 127.0.0.1:9090
# HTTP-RPC server listening interface
httpAddr: 0.0.0.0
# Comma separated list of virtual hostnames from which to accept requests (server enforced).
# Accepts '*' wildcard
httpVhosts: "*"
# Comma separated list of domains from which to accept cross origin requests (browser enforced)
httpCorsDomain: "*"
# API's offered over the HTTP-RPC interface: eth,erigon,web3,net,debug,trace,txpool,db.
# Supported methods: https://github.com/ledgerwatch/erigon/tree/devel/cmd/rpcdaemon
httpApi: "eth,erigon,web3,net,txpool"

## Extra flags for mainnet network
##
extraFlags:
  - "--prune.r.before=11184524"
  - "--prune=htc"

## When p2pNodePort is enabled, your P2P port will be exposed via service type NodePort.
## This will generate a service for each replica, with a port binding via NodePort.
## This is useful if you want to expose and announce your node to the Internet.
##
p2pNodePort:
  ## @param p2pNodePort.enabled Expose P2P port via NodePort
  ##
  enabled: false
  ## @param p2pNodePort.annotations
  ##
  annotations: {}
  ## @param p2pNodePort.startAt The ports allocation will start from this value
  ##
  startAt: 31000
  ## @param p2pNodePort.replicaToNodePort Overwrite a port for specific replicas
  ## @default -- See `values.yaml` for example
  replicaToNodePort: {}
  #  "0": 32345
  #  "3": 32348
  initContainer:
    image:
      ## @param p2pNodePort.initContainer.repository Container image to fetch nodeport information
      ##
      repository: bitnami/kubectl
      ## @param p2pNodePort.initContainer.tag Container tag
      ##
      tag: "1.23"
      ## @param p2pNodePort.initContainer.pullPolicy Container pull policy
      ##
      pullPolicy: IfNotPresent

service:
  type: ClusterIP
  port:
    rpc: 8545
    grpc: 9090

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

## Configure liveness and readiness probes
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
## NB! readinessProbe and livenessProbe must be disabled before fully synced
##
livenessProbe:
  enabled: true
  initialDelaySeconds: 900
  timeoutSeconds: 3
  periodSeconds: 30
  failureThreshold: 3
  successThreshold: 1
  httpGet:
    path: /eth1/liveness
    port: sidecar
    scheme: HTTP

readinessProbe:
  enabled: true
  initialDelaySeconds: 30
  timeoutSeconds: 3
  periodSeconds: 30
  failureThreshold: 30
  successThreshold: 1
  httpGet:
    path: /eth1/readiness
    port: sidecar
    scheme: HTTP

## Node labels for pod assignment
## ref: https://kubernetes.io/docs/user-guide/node-selection/
##
nodeSelector: {}

## Tolerations for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
##
tolerations: []

## Affinity for pod assignment
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Used to assign priority to pods
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

## If false, data ownership will not be reset at startup
## This allows the geth node to be run with an arbitrary user
##
initChownData: true

## Whether or not to allocate persistent volume disk for the data directory.
## In case of node failure, the node data directory will still persist.
##
persistence:
  enabled: true
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  size: 1000Gi
  annotations: {}

## Monitoring
##
metrics:
  ## Whether to enable metrics collection or not
  ##
  enabled: true

  # Enable stand-alone metrics HTTP server listening interface
  addr: "0.0.0.0"
  # Metrics HTTP server listening port
  port: "6060"

  ## Prometheus Service Monitor
  ## ref: https://github.com/coreos/prometheus-operator
  ##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
  ##
  serviceMonitor:
    ## @param metrics.serviceMonitor.enabled Create ServiceMonitor resource(s) for scraping metrics using PrometheusOperator
    ##
    enabled: false
    ## @param metrics.serviceMonitor.namespace The namespace in which the ServiceMonitor will be created
    ##
    namespace: ""
    ## @param metrics.serviceMonitor.interval The interval at which metrics should be scraped
    ##
    interval: 30s
    ## @param metrics.serviceMonitor.scrapeTimeout The timeout after which the scrape is ended
    ##
    scrapeTimeout: ""
    ## @param metrics.serviceMonitor.relabellings Metrics RelabelConfigs to apply to samples before scraping.
    ##
    relabellings: []
    ## @param metrics.serviceMonitor.metricRelabelings Metrics RelabelConfigs to apply to samples before ingestion.
    ##
    metricRelabelings: []
    ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
    ##
    honorLabels: false
    ## @param metrics.serviceMonitor.additionalLabels Additional labels that can be used so ServiceMonitor resource(s) can be discovered by Prometheus
    ##
    additionalLabels: {}
  ## Custom PrometheusRule to be defined
  ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
  ##
  prometheusRule:
    ## @param metrics.prometheusRule.enabled Create a custom prometheusRule Resource for scraping metrics using PrometheusOperator
    ##
    enabled: false
    ## @param metrics.prometheusRule.default Create a default set of Alerts
    ##
    default: true
    ## @param metrics.prometheusRule.namespace The namespace in which the prometheusRule will be created
    ##
    namespace: ""
    ## @param metrics.prometheusRule.additionalLabels Additional labels for the prometheusRule
    ##
    additionalLabels: {}
    ## @param metrics.prometheusRule.rules Custom Prometheus rules
    ##
    rules: []
