kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ template "ssv-node.fullname" . }}
  labels:
    {{- include "ssv-node.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "ssv-node.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "ssv-node.fullname" . }}
  replicas: {{ .Values.replicaCount }}
  template:
    metadata:
      labels:
        {{- include "ssv-node.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
      serviceAccountName: {{ template "ssv-node.fullname" . }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      {{- if and .Values.persistence.enabled .Values.initChownData }}
      initContainers:
        - name: init-chown
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsUser }}", "/data"]
          volumeMounts:
            - name: data
              mountPath: /data
      {{- end }}
      containers:
        - name: node
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ['make']
          args: ['start-node']
          env:
            - name: CONFIG_PATH
              value: /data/configs/config.yaml
            - name: BUILD_PATH
              value: /go/bin/ssvnode
          ports:
            - containerPort: 13000
              name: discovery-tcp
              protocol: TCP
            - containerPort: 12000
              name: discovery-udp
              protocol: UDP
          volumeMounts:
            - name: data
              mountPath: /data
            - name: configs
              mountPath: /data/configs
        {{- with .Values.resources }}
          resources:
            {{ toYaml . | nindent 12 | trim }}
        {{- end }}
      volumes:
        - name: configs
          configMap:
            name: {{ include "ssv-node.fullname" . }}
{{- if (not .Values.persistence.enabled) }}
        - name: data
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "ssv-node.labels" . | nindent 10 }}
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
{{- end }}
