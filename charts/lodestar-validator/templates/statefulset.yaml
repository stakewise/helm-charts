apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.statefulset" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  podManagementPolicy: "Parallel"
  serviceName: {{ include "common.names.fullname" . }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.names.serviceAccountName" . }}
      {{- with .Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
      {{- end }}
      initContainers:
      {{- if and .Values.persistence.enabled .Values.initChownData }}
        - name: init-chown
          image: "{{ .Values.initImage.registry }}/{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          securityContext:
            runAsNonRoot: false
            runAsUser: 0
          command: ["chown", "-R", "{{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsUser }}", "/data"]
          volumeMounts:
            - name: data
              mountPath: /data
      {{- end }}
        - name: import
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          command:
            - sh
            - -c
            - >
              INDEX=$((${HOSTNAME##*-}));
              node /usr/app/packages/cli/bin/lodestar validator import --dataDir=/data --importKeystores=/keystore-${INDEX} --importKeystoresPassword=/keystore-${INDEX}/keystore-${INDEX}.txt
          volumeMounts:
            - name: data
              mountPath: /data
          {{- range $i := until (int .Values.replicaCount) }}
            - name: keystore-{{ . }}
              mountPath: /keystore-{{ . }}
              readOnly: true
          {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - sh
            - -c
            - >
              node /usr/app/packages/cli/bin/lodestar
              validator
              --network={{ .Values.global.network }}
              --dataDir=/data
              --beaconNodes={{ .Values.global.beaconNodes }}
              --metrics
              --metrics.address={{ .Values.metrics.address }}
              --metrics.port={{ .Values.metrics.port }}
          {{- range .Values.extraFlags }}
              {{ . }}
          {{- end }}
          ports:
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
          {{- range $i := until (int .Values.replicaCount) }}
            - name: keystore-{{ . }}
              mountPath: /keystore-{{ . }}
              readOnly: true
          {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      volumes:
      {{- range $i := until (int .Values.replicaCount) }}
        - name: keystore-{{ . }}
          secret:
        {{- if $.Values.global.keystoreSecretName }}
            secretName: {{ $.Values.global.keystoreSecretName }}-{{ . }}
        {{- else }}
            secretName: keystore-{{ . }}
        {{- end }}
      {{- end }}
  {{- if (not .Values.persistence.enabled) }}
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "common.labels.statefulset" . | nindent 10 }}
      {{- with .Values.persistence.annotations }}
        annotations:
          {{ toYaml . | nindent 10 | trim }}
      {{- end }}
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}