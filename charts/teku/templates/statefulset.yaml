kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ include "teku.fullname" . }}
  labels:
    {{- include "teku.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "teku.selectorLabels" . | nindent 6 }}
  serviceName: {{ template "teku.fullname" . }}
  template:
    metadata:
      labels:
        {{- include "teku.selectorLabels" . | nindent 8 }}
    spec:
    {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
    {{- end }}
      serviceAccountName: {{ include "teku.serviceAccountName" . }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
    {{- if and .Values.persistence.enabled .Values.initChownData }}
      initContainers:
        - name: init-chown
          image: "{{ .Values.initImage.repository }}:{{ .Values.initImage.tag }}"
          imagePullPolicy: {{ .Values.initImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          command:
            - /bin/sh
            - -c
            - mkdir -p {{ .Values.teku.dataPath }} && chown -R {{ .Values.securityContext.runAsUser }}:{{ .Values.securityContext.runAsUser }} {{ .Values.teku.dataPath }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.teku.dataPath }}
    {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            - --network={{ .Values.network }}
            - --data-beacon-path={{ .Values.teku.dataBeaconPath }}
            - --data-path={{ .Values.teku.dataPath }}
            - --data-storage-archive-frequency={{ .Values.teku.dataStorageArchiveFrequency }}
            - --data-storage-mode={{ .Values.teku.dataStorageMode }}
            - --data-storage-non-canonical-blocks-enabled={{ .Values.teku.dataStorageNonCanonicalBlocksEnabled }}
            - --eth1-endpoints={{ .Values.teku.eth1Endpoints | join "," }}
          {{- if .Values.teku.restApi.enabled }}
            - --rest-api-enabled={{ .Values.teku.restApi.enabled }}
            - --rest-api-host-allowlist={{ .Values.teku.restApi.hostAllowList | join "," }}
            - --rest-api-interface={{ .Values.teku.restApi.interface }}
            - --rest-api-port={{ .Values.teku.restApi.port }}
            - --rest-api-cors-origins={{ .Values.teku.restApi.corsOrigins | join "," }}
            - --rest-api-docs-enabled={{ .Values.teku.restApi.docsEnabled }}
          {{- end }}
          {{- if .Values.teku.initialState }}
            - --initial-state={{ .Values.teku.initialState }}
          {{- end }}
          {{- if ne .Values.teku.logging "OFF" }}
            - --logging={{ .Values.teku.logging }}
            - --log-color-enabled={{ .Values.teku.logColorEnabled }}
            - --log-destination={{ .Values.teku.logDestination }}
            {{- if .Values.teku.logFile }}
            - --log-file={{ .Values.teku.logFile }}
            {{- end }}
            {{- if .Values.teku.logFileNamePattern }}
            - --log-file-name-pattern={{ .Values.teku.logFileNamePattern }}
            {{- end }}
            - --log-include-events-enabled={{ .Values.teku.logIncludeEventsEnabled }}
          {{- end }}
          {{- if .Values.metrics.enabled }}
            - --metrics-enabled={{ .Values.metrics.enabled }}
            - --metrics-categories={{ .Values.metrics.categories | join "," }}
            - --metrics-host-allowlist={{ .Values.metrics.hostAllowList | join "," }}
            - --metrics-interface={{ .Values.metrics.interface }}
            - --metrics-port={{ .Values.metrics.port }}
          {{- end }}
          {{- if .Values.teku.p2p.enabled }}
            - --p2p-enabled={{ .Values.teku.p2p.enabled }}
            - --p2p-interface={{ .Values.teku.p2p.interface }}
            - --p2p-port={{ .Values.teku.p2p.port }}
            - --p2p-nat-method={{ .Values.teku.p2p.natMethod }}
            - --p2p-peer-lower-bound={{ .Values.teku.p2p.peerLowerBound }}
            - --p2p-peer-upper-bound={{ .Values.teku.p2p.peerUpperBound }}
            - --p2p-discovery-enabled={{ .Values.teku.p2p.discoveryEnabled }}
            {{- if .Values.teku.p2p.discoveryBootNodes }}
            - --p2p-discovery-bootnodes={{ .Values.teku.p2p.discoveryBootNodes | join "," }}
            {{- end }}
            {{- if .Values.teku.p2p.staticPeers }}
            - --p2p-static-peers={{ .Values.teku.p2p.staticPeers | join "," }}
            {{- end }}
            - --p2p-advertised-ip={{ .Values.teku.p2p.advertisedIP }}
            - --p2p-subscribe-all-subnets-enabled={{ .Values.teku.p2p.subscribeAllSubnets }}
          {{- end }}
          env:
            - name: JAVA_OPTS
              value: {{ .Values.teku.javaOpts | quote }}
        {{- if or .Values.teku.p2p.enabled .Values.teku.restApi.enabled .Values.metrics.enabled }}
          ports:
          {{- if .Values.teku.p2p.enabled }}
            - name: p2p-tcp
              containerPort: {{ .Values.teku.p2p.port }}
              protocol: TCP
            - name: p2p-udp
              containerPort: {{ .Values.teku.p2p.port }}
              protocol: UDP
          {{- end }}
          {{- if .Values.teku.restApi.enabled }}
            - name: rest-api
              containerPort: {{ .Values.teku.restApi.port }}
              protocol: TCP
          {{- end }}
          {{- if .Values.metrics.enabled }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
              protocol: TCP
          {{- end }}
        {{- end }}
          volumeMounts:
            - name: data
              mountPath: {{ .Values.teku.dataPath }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- if .Values.teku.restApi.enabled }}
        - name: sidecar
          image: "{{ .Values.sidecar.repository }}:{{ .Values.sidecar.tag }}"
          imagePullPolicy: {{ .Values.sidecar.pullPolicy }}
          env:
            - name: SERVER_BINDADDR
              value: "{{ .Values.sidecar.bindAddr }}:{{ .Values.sidecar.bindPort }}"
            - name: CLIENT_PORT
              value: {{ .Values.teku.restApi.port | quote }}
          ports:
            - containerPort: {{ .Values.sidecar.bindPort }}
              name: sidecar
              protocol: TCP
        {{- if .Values.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: {{ .Values.livenessProbe.httpGet.port }}
              scheme: {{ .Values.livenessProbe.httpGet.scheme }}
        {{- end }}
        {{- if .Values.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: {{ .Values.readinessProbe.httpGet.port }}
              scheme: {{ .Values.readinessProbe.httpGet.scheme }}
        {{- end }}
      {{- end }}
  {{- if (not .Values.persistence.enabled) }}
      volumes:
        - name: data
          emptyDir: {}
  {{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "teku.labels" . | nindent 10 }}
      spec:
        accessModes: {{ .Values.persistence.accessModes }}
        storageClassName: {{ .Values.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.persistence.size | quote }}
  {{- end }}
