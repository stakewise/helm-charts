apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "common.names.fullname" . }}-entrypoint
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
data:
  start_ipfs: |
    #!/bin/sh
    set -e
    user=ipfs
    repo="$IPFS_PATH"

    if [ `id -u` -eq 0 ]; then
      echo "Changing user to $user"
      # ensure folder is writable
      su-exec "$user" test -w "$repo" || chown -R -- "$user" "$repo"
      # restart script with new privileges
      exec su-exec "$user" "$0" "$@"
    fi

    # 2nd invocation with regular user
    ipfs version

    if [ -e "$repo/config" ]; then
      echo "Found IPFS fs-repo at $repo"
    else
      case "$IPFS_PROFILE" in
        "") INIT_ARGS="" ;;
        *) INIT_ARGS="--profile=$IPFS_PROFILE" ;;
      esac
      ipfs init $INIT_ARGS
      ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001
      ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080
      ipfs config --json Peering.Peers "[{\"Addr\": [\"/dnsaddr/node-1.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcFf2FH3CEgTNHeMRGhN7HNHU1EXAxoEk6EFuSyXCsvRE\"}, {\"Addr\": [\"/dnsaddr/node-2.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcFmLd5ySfk2WZuJ1mfSWLDjdmHZq7rSAua4GoeSQfs1z\"}, {\"Addr\": [\"/dnsaddr/node-3.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcfFmzSDVbwexQ9Au2pt5YEXHK5xajwgaU6PpkbLWerMa\"}, {\"Addr\": [\"/dnsaddr/node-4.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcfJeB3Js1FG7T8YaZATEiaHqNKVdQfybYYkbT1knUswx\"}, {\"Addr\": [\"/dnsaddr/node-5.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcfVvzK4tMdFmpJjEKDUoqRgP4W9FnmJoziYX5GXJJ8eZ\"}, {\"Addr\": [\"/dnsaddr/node-6.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcfZD3VKrUxyP9BbyUnZDpbqDnT7cQ4WjPP8TRLXaoE7G\"}, {\"Addr\": [\"/dnsaddr/node-7.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcfZP2LuW4jxviTeG8fi28qjnZScACb8PEgHAc17ZEri3\"}, {\"Addr\": [\"/dnsaddr/node-8.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcfgsJsMtx6qJb74akCw1M24X1zFwgGo11h1cuhwQjtJP\"}, {\"Addr\": [\"/dnsaddr/node-9.ingress.cloudflare-ipfs.com\"], \"ID\": \"Qmcfr2FC7pFzJbTSDfYaSy1J8Uuy8ccGLeLyqJCKJvTHMi\"}, {\"Addr\": [\"/dnsaddr/node-10.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcfR3V5YAtHBzxVACWCzXTt26SyEkxdwhGJ6875A8BuWx\"}, {\"Addr\": [\"/dnsaddr/node-11.ingress.cloudflare-ipfs.com\"], \"ID\": \"Qmcfuo1TM9uUiJp6dTbm915Rf1aTqm3a3dnmCdDQLHgvL5\"}, {\"Addr\": [\"/dnsaddr/node-12.ingress.cloudflare-ipfs.com\"], \"ID\": \"QmcfV2sg9zaq7UUHVCGuSvT2M2rnLBAPsiE79vVyK3Cuev\"}, {\"Addr\": [\"/dnsaddr/fra1-1.hostnodes.pinata.cloud\"], \"ID\": \"QmWaik1eJcGHq1ybTWe7sezRfqKNcDRNkeBaLnGwQJz1Cj\"}, {\"Addr\": [\"/dnsaddr/fra1-2.hostnodes.pinata.cloud\"], \"ID\": \"QmNfpLrQQZr5Ns9FAJKpyzgnDL2GgC6xBug1yUZozKFgu4\"}, {\"Addr\": [\"/dnsaddr/fra1-3.hostnodes.pinata.cloud\"], \"ID\": \"QmPo1ygpngghu5it8u4Mr3ym6SEU2Wp2wA66Z91Y1S1g29\"}, {\"Addr\": [\"/dnsaddr/nyc1-1.hostnodes.pinata.cloud\"], \"ID\": \"QmRjLSisUCHVpFa5ELVvX3qVPfdxajxWJEHs9kN3EcxAW6\"}, {\"Addr\": [\"/dnsaddr/nyc1-2.hostnodes.pinata.cloud\"], \"ID\": \"QmPySsdmbczdZYBpbi2oq2WMJ8ErbfxtkG8Mo192UHkfGP\"}, {\"Addr\": [\"/dnsaddr/nyc1-3.hostnodes.pinata.cloud\"], \"ID\": \"QmSarArpxemsPESa6FNkmuu9iSE1QWqPX2R3Aw6f5jq4D5\"}]"

      # Set up the swarm key, if provided

      SWARM_KEY_FILE="$repo/swarm.key"
      SWARM_KEY_PERM=0400

      # Create a swarm key from a given environment variable
      if [ ! -z "$IPFS_SWARM_KEY" ] ; then
        echo "Copying swarm key from variable..."
        echo -e "$IPFS_SWARM_KEY" >"$SWARM_KEY_FILE" || exit 1
        chmod $SWARM_KEY_PERM "$SWARM_KEY_FILE"
      fi

      # Unset the swarm key variable
      unset IPFS_SWARM_KEY

      # Check during initialization if a swarm key was provided and
      # copy it to the ipfs directory with the right permissions
      # WARNING: This will replace the swarm key if it exists
      if [ ! -z "$IPFS_SWARM_KEY_FILE" ] ; then
        echo "Copying swarm key from file..."
        install -m $SWARM_KEY_PERM "$IPFS_SWARM_KEY_FILE" "$SWARM_KEY_FILE" || exit 1
      fi

      # Unset the swarm key file variable
      unset IPFS_SWARM_KEY_FILE

    fi

    exec ipfs "$@"
