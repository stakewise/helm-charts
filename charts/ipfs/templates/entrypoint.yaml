apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ template "ipfs.fullname" . }}-entrypoint
  labels:
    {{- include "ipfs.labels" . | nindent 4 }}
data:
  start_ipfs: |
    #!/bin/sh
    set -e
    user=ipfs
    repo="$IPFS_PATH"

    if [ `id -u` -eq 0 ]; then
      echo "Changing user to $user"
      # ensure folder is writable
      su-exec "$user" test -w "$repo" || chown -R -- "$user" "$repo"
      # restart script with new privileges
      exec su-exec "$user" "$0" "$@"
    fi

    # 2nd invocation with regular user
    ipfs version

    if [ -e "$repo/config" ]; then
      echo "Found IPFS fs-repo at $repo"
    else
      case "$IPFS_PROFILE" in
        "") INIT_ARGS="" ;;
        *) INIT_ARGS="--profile=$IPFS_PROFILE" ;;
      esac
      ipfs init $INIT_ARGS
      ipfs config Addresses.API /ip4/0.0.0.0/tcp/5001
      ipfs config Addresses.Gateway /ip4/0.0.0.0/tcp/8080
      ipfs config --json Peering.Peers "[{\"Addrs\":[\"/ip6/2606:4700:60::6/tcp/4009\",\"/ip4/172.65.0.13/tcp/4009\"],\"ID\": \"QmcfgsJsMtx6qJb74akCw1M24X1zFwgGo11h1cuhwQjtJP\"},{\"Addrs\":[\"/dnsaddr/fra1-1.hostnodes.pinata.cloud\"],\"ID\": \"QmWaik1eJcGHq1ybTWe7sezRfqKNcDRNkeBaLnGwQJz1Cj\"},{\"Addrs\":[\"/dnsaddr/fra1-2.hostnodes.pinata.cloud\"],\"ID\": \"QmNfpLrQQZr5Ns9FAJKpyzgnDL2GgC6xBug1yUZozKFgu4\"},{\"Addrs\":[\"/dnsaddr/fra1-3.hostnodes.pinata.cloud\"],\"ID\": \"QmPo1ygpngghu5it8u4Mr3ym6SEU2Wp2wA66Z91Y1S1g29\"},{\"Addrs\":[\"/dnsaddr/nyc1-1.hostnodes.pinata.cloud\"],\"ID\": \"QmRjLSisUCHVpFa5ELVvX3qVPfdxajxWJEHs9kN3EcxAW6\"},{\"Addrs\":[\"/dnsaddr/nyc1-2.hostnodes.pinata.cloud\"],\"ID\": \"QmPySsdmbczdZYBpbi2oq2WMJ8ErbfxtkG8Mo192UHkfGP\"},{\"Addrs\":[\"/dnsaddr/nyc1-3.hostnodes.pinata.cloud\"],\"ID\": \"QmSarArpxemsPESa6FNkmuu9iSE1QWqPX2R3Aw6f5jq4D5\"},{\"Addrs\":[\"/dns/cluster0.fsn.dwebops.pub\"],\"ID\": \"QmUEMvxS2e7iDrereVYc5SWPauXPyNwxcy9BXZrC1QTcHE\"},{\"Addrs\":[\"/dns/cluster1.fsn.dwebops.pub\"],\"ID\": \"QmNSYxZAiJHeLdkBg38roksAR9So7Y5eojks1yjEcUtZ7i\"},{\"Addrs\":[\"/dns/cluster2.fsn.dwebops.pub\"],\"ID\": \"QmUd6zHcbkbcs7SMxwLs48qZVX3vpcM8errYS7xEczwRMA\"},{\"Addrs\":[\"/dns/cluster3.fsn.dwebops.pub\"],\"ID\": \"QmbVWZQhCGrS7DhgLqWbgvdmKN7JueKCREVanfnVpgyq8x\"},{\"Addrs\":[\"/dns/cluster4.fsn.dwebops.pub\"],\"ID\": \"QmdnXwLrC8p1ueiq2Qya8joNvk3TVVDAut7PrikmZwubtR\"},{\"Addrs\":[\"/dns4/nft-storage-am6.nft.dwebops.net/tcp/18402\"],\"ID\": \"12D3KooWCRscMgHgEo3ojm8ovzheydpvTEqsDtq7Vby38cMHrYjt\"},{\"Addrs\":[\"/dns4/nft-storage-dc13.nft.dwebops.net/tcp/18402\"],\"ID\": \"12D3KooWQtpvNvUYFzAo1cRYkydgk15JrMSHp6B6oujqgYSnvsVm\"},{\"Addrs\":[\"/dns4/nft-storage-sv15.nft.dwebops.net/tcp/18402\"],\"ID\": \"12D3KooWQcgCwNCTYkyLXXQSZuL5ry1TzpM8PRe9dKddfsk1BxXZ\"},{\"Addrs\":[\"/ip4/104.210.43.77\"],\"ID\": \"QmR69wtWUMm1TWnmuD4JqC1TWLZcc8iR2KrTenfZZbiztd\"}]"

      # Set up the swarm key, if provided

      SWARM_KEY_FILE="$repo/swarm.key"
      SWARM_KEY_PERM=0400

      # Create a swarm key from a given environment variable
      if [ ! -z "$IPFS_SWARM_KEY" ] ; then
        echo "Copying swarm key from variable..."
        echo -e "$IPFS_SWARM_KEY" >"$SWARM_KEY_FILE" || exit 1
        chmod $SWARM_KEY_PERM "$SWARM_KEY_FILE"
      fi

      # Unset the swarm key variable
      unset IPFS_SWARM_KEY

      # Check during initialization if a swarm key was provided and
      # copy it to the ipfs directory with the right permissions
      # WARNING: This will replace the swarm key if it exists
      if [ ! -z "$IPFS_SWARM_KEY_FILE" ] ; then
        echo "Copying swarm key from file..."
        install -m $SWARM_KEY_PERM "$IPFS_SWARM_KEY_FILE" "$SWARM_KEY_FILE" || exit 1
      fi

      # Unset the swarm key file variable
      unset IPFS_SWARM_KEY_FILE

    fi

    exec ipfs "$@"
