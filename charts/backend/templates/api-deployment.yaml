{{- if .Values.api.enabled }}
kind: Deployment
apiVersion: {{ include "common.capabilities.deployment.apiVersion" . }}
metadata:
  name: {{ include "common.names.fullname" . }}-api
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
    component: "api"
spec:
  replicas: {{ default 1 .Values.api.replicas }}
  minReadySeconds: 15
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
      component: "api"
  template:
    metadata:
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
        component: "api"
      annotations:
        checksum/common-secret: {{ include (print $.Template.BasePath "/common-secret.yaml") . | sha256sum }}
        checksum/common-configmap: {{ include (print $.Template.BasePath "/common-configmap.yaml") . | sha256sum }}
        checksum/api-secret: {{ include (print $.Template.BasePath "/api-secret.yaml") . | sha256sum }}
    spec:
      {{- with .Values.api.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.api.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.names.serviceAccountName" . }}
      priorityClassName: {{ .Values.api.priorityClassName | quote }}
      initContainers:
        - name: migrate-db
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command: ["python", "manage.py", "migrate", "--no-input"]
          envFrom:
            - secretRef:
                name: {{ include "common.names.fullname" . }}
            - configMapRef:
                name: {{ include "common.names.fullname" . }}
            - secretRef:
                name: {{ include "common.names.fullname" . }}-api
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "config.settings.api_settings"
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          envFrom:
            - secretRef:
                name: {{ include "common.names.fullname" . }}
            - configMapRef:
                name: {{ include "common.names.fullname" . }}
            - secretRef:
                name: {{ include "common.names.fullname" . }}-api
          env:
            - name: DJANGO_SETTINGS_MODULE
              value: "config.settings.api_settings"
          {{- with .Values.api.resources }}
          resources:
            {{ toYaml . | nindent 12 | trim }}
          {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.api.servicePort }}
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /healthz/
              port: http
              {{- if .Values.api.probesHostHeader }}
              httpHeaders:
                - name: Host
                  value: {{ .Values.api.probesHostHeader | quote }}
              {{- end }}
            initialDelaySeconds: 15
            timeoutSeconds: 30
            failureThreshold: 5
            periodSeconds: 60
          readinessProbe:
            httpGet:
              path: /healthz/
              port: http
              {{- if .Values.api.probesHostHeader }}
              httpHeaders:
                - name: Host
                  value: {{ .Values.api.probesHostHeader | quote }}
              {{- end }}
            initialDelaySeconds: 15
            timeoutSeconds: 30
            failureThreshold: 5
            periodSeconds: 60
{{- end }}
