# Default values for oracle.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Pod Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  fsGroup: 1001
  runAsUser: 1001

# Termination Grace Period
# https://kubernetes.io/docs/tasks/run-application/force-delete-stateful-set-pod/#delete-pods
terminationGracePeriodSeconds: 1800

# Affinity Settings
# https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
affinity: { }

# Toleration Settings
# https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
tolerations: [ ]

# Docker image
image:
  repository: "europe-west4-docker.pkg.dev/stakewiselabs/public/oracle"
  tag: "v2.2.8"
  pullPolicy: IfNotPresent

# Configure resource requests and limits.
# http://kubernetes.io/docs/user-guide/compute-resources/
resources:
  requests:
    cpu: 10m
    memory: 200Mi

# used to assign priority to pod
# ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
priorityClassName: ""

settings:
  logLevel: "INFO"
  # possible values: goerli, perm_goerli, gnosis, mainnet
  enabledNetworks: "mainnet"

  ipfsPinEndpoints: "/dns/ipfs.infura.io/tcp/5001/https"
  ipfsFetchEndpoints: "https://gateway.pinata.cloud,http://cloudflare-ipfs.com,https://ipfs.io"
  ipfsPinataPinEndpoint: "https://api.pinata.cloud/pinning/pinJSONToIPFS"

  # ETH2
  eth2Endpoint:
    mainnet: ""
    goerli: ""
    permGoerli: ""
    gnosis: ""

  enableHealthServer: "False"
  healthServerHost: "0.0.0.0"
  healthServerPort: "8080"

  # Graph
  stakewiseSubgraphUrl:
    mainnet: "https://api.thegraph.com/subgraphs/name/stakewise/stakewise-mainnet"
    goerli: "https://api.thegraph.com/subgraphs/name/stakewise/stakewise-goerli"
    permGoerli: "https://api.thegraph.com/subgraphs/name/stakewise/stakewise-perm-goerli"
    gnosis: "https://api.thegraph.com/subgraphs/name/stakewise/stakewise-gnosis"
  uniswapV3SubgraphUrl:
    mainnet: "https://api.thegraph.com/subgraphs/name/stakewise/uniswap-v3-mainnet"
    goerli: "https://api.thegraph.com/subgraphs/name/stakewise/uniswap-v3-goerli"
  ethereumSubgraphUrl:
    mainnet: "https://api.thegraph.com/subgraphs/name/stakewise/ethereum-mainnet"
    goerli: "https://api.thegraph.com/subgraphs/name/stakewise/ethereum-goerli"
    permGoerli: "https://api.thegraph.com/subgraphs/name/stakewise/ethereum-goerli"
    gnosis: "https://api.thegraph.com/subgraphs/name/stakewise/ethereum-gnosis"
  rariFuseSubgraphUrl:
    mainnet: "https://api.thegraph.com/subgraphs/name/stakewise/rari-fuse-mainnet"

  # credentials
  ipfsPinataApiKey: ""
  ipfsPinataSecretKey: ""

  oraclePrivateKey:
    mainnet: ""
    goerli: ""
    permGoerli: ""
    gnosis: ""

  awsAccessKeyID:
    mainnet: ""
    goerli: ""
    permGoerli: ""
    gnosis: ""

  awsSecretAccessKey:
    mainnet: ""
    goerli: ""
    permGoerli: ""
    gnosis: ""

  awsRegion:
    mainnet: ""
    goerli: ""
    permGoerli: ""
    gnosis: ""

  ## @param settings.extraEnv Extra environment variables to pass to the container
  ## extraEnv:
  ##   MY_ENV_VAR: my_value
  ##
  extraEnv: {}

  ## @param settings.extraSecret Extra environment variables to pass to the container
  ## extraSecret:
  ##   MY_ENV_VAR: my_value
  ##
  extraSecret: {}
