# Default values for v3-operator.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  serviceAccount:
    create: true

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  fsGroup: 1001
  runAsUser: 1001

## Init image is used to chown data volume, initialise genesis, etc.
##
initImage:
  registry: "docker.io"
  repository: "busybox"
  tag: "1.34"
  pullPolicy: IfNotPresent

fullnameOverride: ""

## Termination Grace Period
## ref: https://kubernetes.io/docs/tasks/run-application/force-delete-stateful-set-pod/#delete-pods
##
terminationGracePeriodSeconds: 10

## Affinity Settings
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

## Toleration Settings
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
##
tolerations: []

service:
  type: ClusterIP
  ports:
    http: 9100

serviceAccount:
  ## Annotations to add to the service account
  ##
  annotations: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: ""

## Docker image
##
image:
  registry: "europe-west4-docker.pkg.dev"
  repository: "stakewiselabs/public/v3-operator"
  tag: "v1.3.2"
  pullPolicy: IfNotPresent
  pullSecrets: []

## Configure resource requests and limits.
## http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    cpu: 10m
    memory: 200Mi

## Used to assign priority to pod
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

settings:
  ## Enable debug mode. Default is false.
  verbose: "false"

  ## The network of the Vault. Choices are: mainnet, gnosis, holesky, chiado
  ## Default value will be taken from vault config
  network: "mainnet"

  ## Address of the Vault to register validators for
  ## NOTE: MUST BE ON LOWERCASE
  vault: ""

  ## Whether to submit vault harvest transactions. Default is false.
  harvestVault: "false"

  ## Maximum fee per gas limit for transactions. Default is 70 Gwei.
  maxFeePerGasGwei: 70

  # Comma separated list of endpoints for the execution node
  executionEndpoints: ""

  # Comma separated list of endpoints for the consensus node
  consensusEndpoints: ""

  # Whether to receive configuration files from database
  # and to receive keyshares from web3signer
  remoteDbConfig:
    enabled: false
    dbUrl: "postgresql://postgres:postgres@localhost/operator"
    remoteSignerUrl: "http://web3signer:6174"

  # If specified, deposit data will be obtained from the secret
  depositDataSecretName: ""
  # If specified, keystores will be obtained from the secret
  keystoresSecretName: ""
  # If specified, wallet will be obtained from the secret
  walletSecretName: ""

  # Sentry connection string
  # sentryDSN: ""

  # Additional arguments to path to operator
  extraFlags: []

## If false, data ownership will not be reset at startup
## This allows the geth node to be run with an arbitrary user
##
initChownData: true

## Whether or not to allocate persistent volume disk for the data directory.
## In case of node failure, the node data directory will still persist.
##
persistence:
  enabled: true
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  size: 1Gi

## Monitoring
##
metrics:
  # Whether to enable metrics collection or not
  enabled: false
  # Prometheus exporter port
  port: 9100
  ## Custom PrometheusRule to be defined
  ## ref: https://github.com/coreos/prometheus-operator#customresourcedefinitions
  ##
  prometheusRule:
    ## @param metrics.prometheusRule.enabled Create a custom prometheusRule Resource for scraping metrics using PrometheusOperator
    ##
    enabled: false
    ## @param metrics.prometheusRule.default Create a default set of Alerts
    ##
    default: false
    ## @param metrics.prometheusRule.namespace The namespace in which the prometheusRule will be created
    ##
    namespace: ""
    ## @param metrics.prometheusRule.additionalLabels Additional labels for the prometheusRule
    ##
    additionalLabels: {}
    ## @param metrics.prometheusRule.rules Custom Prometheus rules
    ## e.g:
    ## rules:
    ##   - alert: PrysmValidatorHourlyEarningLessOrEqual0
    ##     expr: sum(validator_balance) - sum(validator_balance offset 1h) - count(validator_balance > 16)*32 + count(validator_balance offset 1h > 0)*32
    ##     for: 5m
    ##     labels:
    ##       severity: critical
    ##     annotations:
    ##       summary: Prysm validator hourly earning <= 0
    ##       description: Check validators immediately. Pod - {{ printf "{{ $labels.pod }}" }}. Namespace - {{ printf "{{ $labels.namespace }}" }}
    ##   - alert: PrysmValidatorAlotOfErrorsLastHour
    ##     expr: sum(delta(log_entries_total{job='{{ include "operator.fullname" . }}-validator', level="error"}[1h]) > 0)
    ##     for: 5m
    ##     labels:
    ##       severity: warning
    ##     annotations:
    ##       summary: Many validator errors or warnings last hour
    ##       description: Check validator {{ printf "{{ $labels.pod }}" }}. Namespace - {{ printf "{{ $labels.namespace }}" }}
    ##
    rules: {}
## Prometheus Service Monitor
## ref: https://github.com/coreos/prometheus-operator
##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
##
serviceMonitor:
  enabled: false
  host: 0.0.0.0
  ## The namespace in which the ServiceMonitor will be created
  ##
  namespace: ""
  ## The interval at which metrics should be scraped
  ##
  interval: 30s
  ## The timeout after which the scrape is ended
  ##
  scrapeTimeout: ""
  ## Metrics RelabelConfigs to apply to samples before scraping.
  ##
  relabelings: []
  ## Metrics RelabelConfigs to apply to samples before ingestion.
  ##
  metricRelabelings: []
  ## Specify honorLabels parameter to add the scrape endpoint
  ##
  honorLabels: false
  ## Additional labels that can be used so ServiceMonitor resource(s) can be discovered by Prometheus
  ##
  additionalLabels: {}
