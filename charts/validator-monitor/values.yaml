# Default values for validator-monitor.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Validator Monitor Settings
# Options:
# mainnet: https://api.thegraph.com/subgraphs/name/stakewise/stakewise-mainnet
# goerli: https://api.thegraph.com/subgraphs/name/stakewise/stakewise-goerli
# gnosis: https://api.thegraph.com/subgraphs/name/stakewise/stakewise-gnosis
graphNodeUrl: https://api.thegraph.com/subgraphs/name/stakewise/stakewise-mainnet
beaconNodeUrl: http://localhost:5052
indexChunckSize: 800
operatorWallets: []

replicaCount: 1

image:
  repository: europe-west4-docker.pkg.dev/stakewiselabs/public/validator-monitor
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "v0.0.7"

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 9000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

## Prometheus Service Monitor
## ref: https://github.com/coreos/prometheus-operator
##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
##
serviceMonitor:
  ## @param metrics.serviceMonitor.enabled Create ServiceMonitor resource(s) for scraping metrics using PrometheusOperator
  ##
  enabled: true
  ## @param metrics.serviceMonitor.namespace The namespace in which the ServiceMonitor will be created
  ##
  namespace: ""
  ## @param metrics.serviceMonitor.interval The interval at which metrics should be scraped
  ##
  interval: 30s
  ## @param metrics.serviceMonitor.scrapeTimeout The timeout after which the scrape is ended
  ##
  scrapeTimeout: ""
  ## @param metrics.serviceMonitor.relabellings Metrics RelabelConfigs to apply to samples before scraping.
  ##
  relabellings: []
  ## @param metrics.serviceMonitor.metricRelabelings Metrics RelabelConfigs to apply to samples before ingestion.
  ##
  metricRelabelings: []
  ## @param metrics.serviceMonitor.honorLabels Specify honorLabels parameter to add the scrape endpoint
  ##
  honorLabels: false
  ## @param metrics.serviceMonitor.additionalLabels Additional labels that can be used so ServiceMonitor resource(s) can be discovered by Prometheus
  ##
  additionalLabels: {}
