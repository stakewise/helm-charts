apiVersion: {{ include "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "common.names.fullname" . }}
  labels:
    {{- include "common.labels.standard" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "common.labels.matchLabels" . | nindent 6 }}
  serviceName: {{ include "common.names.fullname" . }}
  template:
    metadata:
      annotations:
        checksum/config.toml: {{ print (tpl .Values.graph.configTemplate $) | sha256sum }}
        checksum/graph-secret-env: {{ include (print $.Template.BasePath "/secret-env.yaml") . | sha256sum }}
        checksum/graph-secret-config: {{ include (print $.Template.BasePath "/secret-config.yaml") . | sha256sum }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "common.labels.matchLabels" . | nindent 8 }}
    spec:
      {{- with .Values.image.pullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "common.names.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.SecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      priorityClassName: {{ .Values.priorityClassName | quote }}
      containers:
        - name: {{ .Chart.Name }}
          command:
            - graph-node
            - --config=/config/config.toml
            {{- with .Values.graph.extraArgs }}
              {{- toYaml (. | default list) | nindent 12 }}
            {{- end }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: IPFS
              {{- if not .Values.graph.ipfsUrl }}
              value: "{{ .Release.Name }}-ipfs:5001"
              {{- else }}
              value: {{ .Values.graph.ipfsUrl | quote }}
              {{- end }}
            {{- range $key, $value := .Values.graph.env }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
          envFrom:
            - secretRef:
                name: {{ template "common.names.fullname" . }}-env
          ports:
            - name: http
              containerPort: {{ .Values.service.ports.http }}
              protocol: TCP
            - name: websocket
              containerPort: {{ .Values.service.ports.websocket }}
              protocol: TCP
            - name: jsonrpc
              containerPort: {{ .Values.service.ports.jsonrpc }}
              protocol: TCP
            - name: index-status
              containerPort: {{ .Values.service.ports.indexStatus }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.service.ports.metrics }}
              protocol: TCP
          readinessProbe:
            {{- toYaml .Values.readinessProbe | nindent 12 }}
          livenessProbe:
            {{- toYaml .Values.livenessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
          - name: config
            mountPath: "/config"
            readOnly: true
      volumes:
        - name: config
          secret:
            secretName: {{ template "common.names.fullname" . }}-config
