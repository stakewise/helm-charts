# Default values for oracle.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

global:
  serviceAccount:
    create: true

## Pod Security Context
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
##
securityContext:
  fsGroup: 1001
  runAsUser: 1001

## Init image is used to chown data volume, initialise genesis, etc.
##
initImage:
  registry: "docker.io"
  repository: "busybox"
  tag: "1.34"
  pullPolicy: IfNotPresent

fullnameOverride: ""

## Termination Grace Period
## ref: https://kubernetes.io/docs/tasks/run-application/force-delete-stateful-set-pod/#delete-pods
##
terminationGracePeriodSeconds: 300

## Affinity Settings
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: { }

## Toleration Settings
## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
##
tolerations: [ ]

serviceAccount:
  ## Annotations to add to the service account
  ##
  annotations: {}
  ## The name of the service account to use.
  ## If not set and create is true, a name is generated using the fullname template
  ##
  name: ""

## Docker image
##
image:
  registry: "europe-west4-docker.pkg.dev"
  repository: "stakewiselabs/public/v3-oracle"
  tag: "master"
  pullPolicy: IfNotPresent
  pullSecrets: [ ]

## Configure resource requests and limits.
## http://kubernetes.io/docs/user-guide/compute-resources/
##
resources:
  requests:
    cpu: 10m
    memory: 200Mi

## Used to assign priority to pod
## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
##
priorityClassName: ""

service:
  type: ClusterIP
  ports:
    http: 8000

ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

settings:
  logLevel: "INFO"
  ## Possible values: goerli, perm_goerli, gnosis, mainnet
  ##
  network: "mainnet"

  walletPrivateKey:  ""
  sentryDsn: ""

  ## Ethereum / Gnosis Nodes
  ##
  executionEndpoint: ""
  consensusEndpoint: ""

  ## IPFS Settings
  ##
  ipfsLocalClientEndpoint: ""
  ipfsInfuraClientUsername: ""
  ipfsInfuraClientPassword: ""
  ipfsPinataApiKey: ""
  ipfsPinataSecretKey: ""
  ipfsWeb3StorageToken: ""
  ipfsFetchEndpoints: "https://stakewise-v3.infura-ipfs.io,http://cloudflare-ipfs.com,https://gateway.pinata.cloud,https://ipfs.io"

## If false, data ownership will not be reset at startup
## This allows the geth node to be run with an arbitrary user
##
initChownData: true

## Whether or not to allocate persistent volume disk for the data directory.
## In case of node failure, the node data directory will still persist.
##
persistence:
  enabled: true
  storageClassName: ""
  accessModes:
    - ReadWriteOnce
  size: 1Gi

ipfs:
  enabled: true

## Prometheus Service Monitor
## ref: https://github.com/coreos/prometheus-operator
##      https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
##
serviceMonitor:
  enabled: false
  ## The namespace in which the ServiceMonitor will be created
  ##
  namespace: ""
  ## The interval at which metrics should be scraped
  ##
  interval: 30s
  ## The timeout after which the scrape is ended
  ##
  scrapeTimeout: ""
  ## Metrics RelabelConfigs to apply to samples before scraping.
  ##
  relabelings: []
  ## Metrics RelabelConfigs to apply to samples before ingestion.
  ##
  metricRelabelings: []
  ## Specify honorLabels parameter to add the scrape endpoint
  ##
  honorLabels: false
  ## Additional labels that can be used so ServiceMonitor resource(s) can be discovered by Prometheus
  ##
  additionalLabels: {}
