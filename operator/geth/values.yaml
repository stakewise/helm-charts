# Default values for geth.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Pod Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  fsGroup: 1001
  runAsUser: 1001

# Init image is used to chown data volume, initialise genesis, etc.
initImage:
  repository: "busybox"
  tag: "1.34"
  pullPolicy: IfNotPresent

# Network (chain) ID
networkId: ""

# The purpose of the boot node is to provide a starting point for
# newly connected nodes to find other peers.
bootnode:
  # Whether to deploy bootnode or not.
  enabled: false

  ## Geth image version
  ## ref: https://hub.docker.com/r/ethereum/client-go/tags/
  image:
    repository: "ethereum/client-go"
    tag: "alltools-v1.10.6"
    pullPolicy: IfNotPresent

  # Node key for the identity
  privateKey: "xxx"
  publicKey: "xxx"

  # Extra flags to pass to the bootnode
  extraFlags:
    - "--verbosity=4"

  # Configure resource requests and limits.
  # http://kubernetes.io/docs/user-guide/compute-resources/
  resources: { }

  # used to assign priority to pods
  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  priorityClassName: ""

  # used to expose bootnode ports
  # ref: https://kubernetes.io/docs/concepts/services-networking/service/
  services:
    - name: http-rpc
      port: 8545
      protocol: TCP
    - name: discovery-tcp
      port: 30303
      protocol: TCP
    - name: discovery-udp
      port: 30303
      protocol: UDP
    - name: bootnode-tcp
      port: 30301
      protocol: TCP
    - name: bootnode-udp
      port: 30301
      protocol: UDP


# Miner is used to include transactions into blocks.
miner:
  # Whether to deploy miner or not.
  enabled: false

  ## Geth image version
  ## ref: https://hub.docker.com/r/ethereum/client-go/tags/
  image:
    repository: "ethereum/client-go"
    tag: "v1.10.6"
    pullPolicy: IfNotPresent

  # Assign unique account to each miner
  # The amount of replicas will be equal to the number of accounts
  # Read following before adding new accounts: https://ethereum.stackexchange.com/a/15779
  accounts:
    - password: ""
      privateKey: ""

  # Configure resource requests and limits.
  # http://kubernetes.io/docs/user-guide/compute-resources/
  resources: { }

  # Vertical Pod Autoscaler config
  # Ref: https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler
  verticalAutoscaler:
    # If true a VPA object will be created for the StatefulSet
    enabled: false
    updateMode: Off
    containerPolicies: { }

  # Extra flags to pass to the miner
  extraFlags:
    - "--nat=extip:$(POD_IP)"
    - "--syncmode=full"

  # If false, data ownership will not be reset at startup
  # This allows the geth miner to be run with an arbitrary user
  initChownData: true

  metrics:
    # Whether to enable metrics collection or not
    enabled: false

    port: 6060

    # Extra flags to pass for collecting metrics
    flags:
      - "--metrics"
      - "--pprof"
      - "--pprof.addr=0.0.0.0"
      - "--pprof.port=6060"

    # Metrics collection annotations to add to miner pods
    podAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "6060"
      prometheus.io/path: "/debug/metrics/prometheus"
  
  # used to expose miner ports
  # ref: https://kubernetes.io/docs/concepts/services-networking/service/
  services:
    - name: discovery-tcp
      port: 30303
      protocol: TCP
    - name: discovery-udp
      port: 30303
      protocol: UDP

  # Whether or not to allocate persistent volume disk for the data directory.
  # In case of node failure, the node data directory will still persist.
  persistence:
    enabled: true
    storageClassName: ""
    accessModes:
      - ReadWriteOnce
    size: 400Gi

  # Affinity Settings
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: { }

  # used to assign priority to pods
  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  priorityClassName: ""

# A node is used to interact with Ethereum transactions, contracts.
node:
  # Whether to deploy node or not.
  enabled: true

  ## Geth image version
  ## ref: https://hub.docker.com/r/ethereum/client-go/tags/
  image:
    repository: "ethereum/client-go"
    tag: "v1.10.6"
    pullPolicy: IfNotPresent

  # How many geth nodes to run simultaneously
  replicas: 1

  # Pod disruption budget
  # https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  podDisruptionBudget:
    enabled: false
    maxUnavailable: 1

  # RPC configuration.
  rpc:
    enabled: false
    api: "web3,eth,net"
    corsDomain: ""
    vhosts: ""
    ingressEnabled: false
    ingressPath: /

  # WebSocket configuration.
  ws:
    enabled: false
    api: "web3,eth,net"
    origins: ""
    ingressEnabled: false
    ingressPath: /ws

  metrics:
    # Whether to enable metrics collection or not
    enabled: false

    port: 6060

    # Extra flags to pass for collecting metrics
    flags:
      - "--metrics"
      - "--pprof"
      - "--pprof.addr=0.0.0.0"
      - "--pprof.port=6060"

    # Metrics collection annotations to add to service
    svcAnnotations:
      prometheus.io/scrape: "true"
      prometheus.io/port: "6060"
      prometheus.io/path: "/debug/metrics/prometheus"

  # defines whether the service must be headless
  svcHeadless: false

  # used to expose miner ports
  # ref: https://kubernetes.io/docs/concepts/services-networking/service/
  services:
    - name: discovery-tcp
      port: 30303
      protocol: TCP
    - name: discovery-udp
      port: 30303
      protocol: UDP

  # Configure session affinity for to hit the same geth node
  # for the period specified in `timeoutSeconds`
  # https://kubernetes.io/docs/concepts/services-networking/service/#proxy-mode-userspace
  sessionAffinity:
    # Whether to enable session affinity or not
    enabled: false
    # The session duration in seconds
    timeoutSeconds: 86400

  # Ingress
  # https://kubernetes.io/docs/concepts/services-networking/ingress/
  ingress:
    enabled: false

    # Whether ingress should be connected to NodePort Service
    # This is the requirement for GKE load balancer ingresses
    # https://cloud.google.com/kubernetes-engine/docs/concepts/ingress
    nodePortSvc: true

    annotations: [ ]

    tls: [ ]
    hosts: [ ]

  # Extra flags to pass to the node
  extraFlags:
    - "--syncmode=light"

  # Vertical Pod Autoscaler config
  # Ref: https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler
  verticalAutoscaler:
    # If true a VPA object will be created for the StatefulSet
    enabled: false
    updateMode: Off
    containerPolicies: { }

  # Configure resource requests and limits.
  # http://kubernetes.io/docs/user-guide/compute-resources/
  resources: { }

  # If false, data ownership will not be reset at startup
  # This allows the geth node to be run with an arbitrary user
  initChownData: true

  # Whether or not to allocate persistent volume disk for the data directory.
  # In case of node failure, the node data directory will still persist.
  persistence:
    enabled: true
    storageClassName: ""
    accessModes:
      - ReadWriteOnce
    size: 20Gi

  # Affinity Settings
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: { }

  # Toleration Settings
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: [ ]

  # used to assign priority to pods
  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  priorityClassName: ""

# Genesis configuration
genesis: { }
