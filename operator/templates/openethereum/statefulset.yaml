{{- if .Values.openethereum.enabled }}
{{ $chainConfig := index $.Values.openethereum.chains $.Values.openethereum.chain }}
kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ template "operator.fullname" . }}-openethereum
  labels:
    {{- include "openethereum.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      {{- include "operator.selectorLabels" . | nindent 6 }}
      {{- include "openethereum.labels" . | nindent 6 }}
  serviceName: {{ template "operator.fullname" . }}
  replicas: {{ .Values.openethereum.replicas }}
  template:
    metadata:
      labels:
        {{- include "operator.selectorLabels" . | nindent 8 }}
        {{- include "openethereum.labels" . | nindent 8 }}
    spec:
    {{- with .Values.openethereum.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.openethereum.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.openethereum.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with .Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
      serviceAccountName: {{ template "operator.fullname" . }}
      priorityClassName: {{ .Values.openethereum.priorityClassName | quote }}
      {{- if and .Values.openethereum.persistence.enabled .Values.openethereum.initChownData }}
      initContainers:
        {{- include "init-chown" . | nindent 8 }}
      {{- end }}
      containers:
        - name: node
          image: "{{ .Values.openethereum.image.repository }}:{{ .Values.openethereum.image.tag }}"
          imagePullPolicy: {{ .Values.openethereum.image.pullPolicy }}
          command: ['/bin/sh', '/data/scripts/entrypoint.sh']
          args:
            {{- if $chainConfig.bootnodes }}
            - "--bootnodes"
            - "{{ join "," $chainConfig.bootnodes }}"
            {{- end }}
            - "-d"
            - "/data/openethereum"
            - "--chain"
            - "{{ $.Values.openethereum.chain }}"
            - "--jsonrpc-interface"
            - "all"
            - "--jsonrpc-hosts"
            - "all"
            - "--jsonrpc-port"
            - "8545"
            - "--ws-interface"
            - "all"
            - "--ws-hosts"
            - "all"
            - "--ws-port"
            - "8546"
            - "--min-peers"
            - "50"
            - "--max-peers"
            - "100"
            {{- if .Values.openethereum.metrics.enabled }}
            - "--metrics"
            - "--metrics-port"
            - {{ .Values.openethereum.metrics.port | quote }}
            - "--metrics-interface"
            - "all"
            {{- end }}
            {{- with .Values.openethereum.extraFlags }}
              {{- toYaml . | nindent 12 }}
            {{- end }}
          env:
            - name: POD_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
          ports:
            - containerPort: 8545
              name: rpc
              protocol: TCP
            - containerPort: 8546
              name: ws
              protocol: TCP
          {{- if .Values.openethereum.metrics.enabled }}
            - containerPort: {{ .Values.openethereum.metrics.port }}
              name: metrics
              protocol: TCP
          {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data/openethereum
            - name: scripts
              mountPath: /data/scripts
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 15
            periodSeconds: 20
            successThreshold: 1
            tcpSocket:
              port: 8545
            timeoutSeconds: 1
          readinessProbe:
            failureThreshold: 3
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 8545
            timeoutSeconds: 1
        {{- with .Values.openethereum.resources }}
          resources:
            {{ toYaml . | nindent 12 | trim }}
        {{- end }}
      volumes:
        - name: scripts
          configMap:
            name: {{ include "operator.fullname" . }}-openethereum
{{- if (not .Values.openethereum.persistence.enabled) }}
        - name: data
          emptyDir: {}
{{- else }}
  volumeClaimTemplates:
    - metadata:
        name: data
        labels:
          {{- include "operator.labels" . | nindent 10 }}
          {{- include "openethereum.labels" . | nindent 10 }}
      spec:
        accessModes: {{ .Values.openethereum.persistence.accessModes }}
        storageClassName: {{ .Values.openethereum.persistence.storageClassName }}
        resources:
          requests:
            storage: {{ .Values.openethereum.persistence.size | quote }}
{{- end }}
{{- end }}
