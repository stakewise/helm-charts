{{- if .Values.enabled }}
{{- $root := . -}}
{{- range (untilStep 0 (int .Values.validatorsCount) 1) }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "operator.fullname" $root }}-validator{{.}}
  labels:
    {{- include "validator.labels" $root | nindent 4 }}
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "operator.selectorLabels" $root | nindent 6 }}
  serviceName: {{ template "operator.fullname" $root }}
  template:
    metadata:
      labels:
        {{- include "operator.selectorLabels" $root | nindent 8 }}
      annotations:
        checksum/configmap: {{ include (print $root.Template.BasePath "/configmap.yaml") $root | sha256sum }}
    spec:
    {{- with $root.Values.terminationGracePeriodSeconds }}
      terminationGracePeriodSeconds: {{ . }}
    {{- end }}
    {{- with $root.Values.affinity }}
      affinity:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with $root.Values.tolerations }}
      tolerations:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with $root.Values.nodeSelector }}
      nodeSelector:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
    {{- with $root.Values.securityContext }}
      securityContext:
        {{ toYaml . | nindent 8 | trim }}
    {{- end }}
      serviceAccountName: "validator{{.}}"
      priorityClassName: {{ $root.Values.priorityClassName | quote }}
      initContainers:
        - name: init-validator
          image: "{{ $root.Values.initImage.repository }}:{{ $root.Values.initImage.tag }}"
          imagePullPolicy: {{ $root.Values.initImage.pullPolicy }}
          securityContext:
            runAsUser: 0
          env:
            - name: VAULT_ADDR
              {{- if $root.Values.vaultAddr }}
              value: {{ $root.Values.vaultAddr | quote }}
              {{- else }}
              value: "http://{{ template "operator.fullname" $ }}-vault:8200"
              {{- end }}
            - name: NETWORK_ID
              value: {{ $root.Values.networkID | quote }}
            - name: VALIDATOR_TYPE
              value: {{ $root.Values.type | quote }}
            - name: SERVICE_ACCOUNT
              value: "validator{{.}}"
          volumeMounts:
            - name: data
              mountPath: /data
            - name: configs
              mountPath: "/mnt/configs"
            - name: validator-init
              mountPath: /data/scripts
      {{- if $.Values.persistence.enabled }}
        {{- include "init-validator-info" $root | nindent 8 }}
      {{- end }}
      {{- if and $.Values.persistence.enabled $.Values.initChownData }}
        {{- include "init-chown" $root | nindent 8 }}
      {{- end }}
      containers:
        - name: validator
          image: "{{ (pluck $root.Values.type $root.Values.image | first ).repository }}:{{ (pluck $root.Values.type $root.Values.image | first ).tag }}"
          imagePullPolicy: {{ $root.Values.image.pullPolicy }}
          args:  
          {{- range (pluck $root.Values.type $root.Values.flags | first) }}
            - {{ . | quote }}
          {{- end -}}
          {{- range (pluck $root.Values.type $root.Values.extraFlags | first) }}
            - {{ . | quote }}
          {{- end -}}
          {{- include "beacon-rpc-node" $ | nindent 12 }}
          {{- include "validator-graffiti" $ | nindent 12 }}
          {{- if $root.Values.metrics.enabled }}
            {{- range (pluck $root.Values.type $root.Values.metrics.flags | first) }}
            - {{ . | quote }}
            {{- end }}
          {{- end }}
          {{- if eq $root.Values.networkID "prater" }}
            {{- if eq $root.Values.type "prysm" }}
            - "--prater"
            {{- else if eq $root.Values.type "lighthouse" }}
            - "--network=prater"
            {{- end }}
          {{- end }}
        {{- if $root.Values.metrics.enabled }}
          ports:
            - containerPort: {{ $root.Values.metrics.port }}
              name: metrics
              protocol: TCP
        {{- end }}
        {{- with $root.Values.resources }}
          resources:
            {{ toYaml . | nindent 16 | trim }}
        {{- end }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: configs
              mountPath: "/mnt/configs"
        {{- with (pluck $root.Values.type $root.Values.readinessProbe | first) }}
          readinessProbe:
            {{- toYaml . | nindent 12 }}
        {{- end }}
        {{- with (pluck $root.Values.type $root.Values.livenessProbe | first) }}
          livenessProbe:
            {{- toYaml . | nindent 12 }}
        {{- end }}
      volumes:
        - name: configs
          configMap:
            name: {{ template "operator.fullname" $root }}-validator-configs
        - name: validator-init
          configMap:
            name: {{ template "operator.fullname" $root }}-validator-init
{{- if (not $root.Values.persistence.enabled) }}
        - name: data
          emptyDir: {}
{{- else }}
        - name: data
          persistentVolumeClaim:
            claimName: data-validator{{.}}
{{- end }}

{{- end }}
{{- end }}
