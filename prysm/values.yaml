# Default values for prysm.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Pod Security Context
# ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
securityContext:
  fsGroup: 1001
  runAsUser: 1001

# A node which implements the DiscoveryV5 protocol for peer
# discovery. The purpose of this service is to provide a starting point for
# newly connected services to find other peers outside of their network.
bootnode:
  # Whether to deploy bootnode or not.
  enabled: false

  # Service Cluster IP
  clusterIP: ""

  # Docker image
  image:
    repository: "gcr.io/prysmaticlabs/prysm/bootnode"
    tag: "HEAD-9fd557"
    pullPolicy: IfNotPresent

  # Optional private key used for identity
  privateKey: ""

  # Extra flags to pass to the bootnode
  extraFlags:
    - "--external-ip=$(POD_IP)"

  # Configure resource requests and limits.
  # http://kubernetes.io/docs/user-guide/compute-resources/
  resources:
    requests:
      cpu: 2m
      memory: 25Mi

  # used to assign priority to pods
  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  priorityClassName: "high-priority"

# A slasher listens for all broadcasted messages using a running beacon node
# in order to detect slashable attestations and block proposals. It is attached to the beacon Pod.
slasher:
  # Whether to deploy slasher or not.
  enabled: false

  # Docker image
  image:
    repository: "gcr.io/prysmaticlabs/prysm/slasher"
    tag: "v1.3.11"
    pullPolicy: IfNotPresent

  extraFlags:
    - "--accept-terms-of-use"

  # Configure resource requests and limits.
  # http://kubernetes.io/docs/user-guide/compute-resources/
  resources: { }

  # Configure liveness and readiness probes
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  readinessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
    periodSeconds: 10
    failureThreshold: 3
    successThreshold: 1
    httpGet:
      path: /healthz
      port: 9090
      scheme: HTTP
  livenessProbe:
    initialDelaySeconds: 30
    timeoutSeconds: 30
    periodSeconds: 15
    failureThreshold: 3
    successThreshold: 1
    httpGet:
      path: /healthz
      port: 9090
      scheme: HTTP

  # If false, data ownership will not be reset at startup
  # This allows the beacon node to be run with an arbitrary user
  initChownData:
    enabled: true
    # initChownData container image
    image:
      repository: "busybox"
      tag: "1.33"
      pullPolicy: IfNotPresent

  # Whether or not to allocate persistent volume disk for the data directory.
  # In case of pod failure, the pod data directory will still persist.
  persistence:
    enabled: true
    storageClassName: ""
    accessModes:
      - ReadWriteOnce
    size: 30Gi


# Beacon chain is responsible for running a full Proof-of-Stake blockchain
beacon:
  # Whether to deploy beacon chain or not.
  enabled: true

  # How many beacon chain pods to run simultaneously
  replicas: 2

  # Docker image
  image:
    repository: "gcr.io/prysmaticlabs/prysm/beacon-chain"
    tag: "v2.0.2"
    pullPolicy: IfNotPresent

  # Enable pod disruption budget
  # https://kubernetes.io/docs/tasks/run-application/configure-pdb
  podDisruptionBudget:
    enabled: true
    maxUnavailable: 1

  # Vertical Pod Autoscaler config
  # Ref: https://github.com/kubernetes/autoscaler/tree/master/vertical-pod-autoscaler
  verticalAutoscaler:
    # If true a VPA object will be created for the StatefulSet
    enabled: false
    updateMode: Off
    containerPolicies: { }

  extraFlags:
    # Beacon chain options
    - "--accept-terms-of-use"
    - "--http-web3provider=<eth1 chain endpoint>"

    # p2p options
    - "--p2p-max-peers=100"
    - "--enable-peer-scorer"

  metrics:
    # Whether to enable metrics collection or not
    enabled: false

    port: 9090

    # Extra flags to pass for collecting metrics
    flags:
      - "--monitoring-port=9090"
      - "--monitoring-host=0.0.0.0"

    # Metrics collection annotations to add to service
    svcAnnotations:
      prometheus.io/scrape: "true"

  # defines whether the service must be headless
  svcHeadless: false

  # Configure session affinity for validator clients to hit the same beacon node
  # for the period specified in `timeoutSeconds`
  # https://kubernetes.io/docs/concepts/services-networking/service/#proxy-mode-userspace
  sessionAffinity:
    # Whether to enable session affinity or not
    enabled: false
    # The session duration in seconds
    timeoutSeconds: 86400

  # Configure resource requests and limits.
  # http://kubernetes.io/docs/user-guide/compute-resources/
  resources: { }

  # Configure liveness and readiness probes
  # https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
  # NB! readinessProbe and livenessProbe must be disabled before genesis
  readinessProbe:
    initialDelaySeconds: 180
    timeoutSeconds: 1
    periodSeconds: 60
    failureThreshold: 3
    successThreshold: 1
    httpGet:
      path: /healthz
      port: 9090
      scheme: HTTP
  livenessProbe:
    initialDelaySeconds: 60
    timeoutSeconds: 1
    periodSeconds: 60
    failureThreshold: 60
    successThreshold: 1
    httpGet:
      path: /healthz
      port: 9090
      scheme: HTTP

  # If false, data ownership will not be reset at startup
  # This allows the beacon node to be run with an arbitrary user
  initChownData:
    enabled: true
    # initChownData container image
    image:
      repository: "busybox"
      tag: "1.33"
      pullPolicy: IfNotPresent

  # Whether or not to allocate persistent volume disk for the data directory.
  # In case of pod failure, the pod data directory will still persist.
  persistence:
    enabled: true
    storageClassName: ""
    accessModes:
      - ReadWriteOnce
    size: 300Gi

  # Affinity Settings
  # https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  affinity: { }

  # Toleration Settings
  # https://kubernetes.io/docs/concepts/scheduling-eviction/taint-and-toleration/
  tolerations: [ ]

  # used to assign priority to pods
  # ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  priorityClassName: ""
